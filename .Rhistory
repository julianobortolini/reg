ID <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
21, 22, 23, 24, 25)
y <- c(16.68, 11.50, 12.03, 14.88, 13.75, 18.11, 8.00, 17.83, 79.24, 21.50,
40.33, 21.00, 13.50, 19.75, 24.00, 29.00, 15.35, 19.00, 9.50, 35.10,
17.90, 52.32, 18.75, 19.83, 10.75)
x1 <- c(7, 3, 3, 4, 6, 7, 2, 7, 30, 5,
16, 10, 4, 6, 9, 10, 6, 7, 3, 17,
10, 26, 9, 8, 4)
x2 <- c(560, 220, 340, 80, 150, 330, 110, 210, 1460, 605,
688, 215, 255, 462, 448, 776, 200, 132, 36, 770,
140, 810, 450, 635, 150)
dados <- data.frame(ID, y, x1, x2)
# Ajuste do modelo linear múltiplo
mod <- lm(y ~ x1 + x2, data = dados)
# estimativas dos parâmetros/coeficientes
summary(mod)
# resíduos brutos
res_1 <- residuals(mod)
# resíduos padronizados
res_2 <- res_1/summary(mod)$sigma
# resíduos studentizados
# res_3 <- rstandard(mod, type = "sd.1")
res_3 <- rstandard(mod)
# resíduos PRESS
res_4 <- rstandard(mod, type = "pred")
# resíduos R-Student
res_5 <- rstudent(mod)
residuos <- data.frame(
"brutos" = res_1,
"padronizados" = res_2,
"studentizado" = res_3,
"PRESS" = res_4,
"RStudent" = res_5
)
residuos
library(lmtest)
dwtest(res_3 ~ dados$ID, alternative = "two.sided")
# Teste de Bartlett
bartlett.test(res_3 ~ dados$x1 + dados$x2)
# Teste de Breusch-Pagan
# library(lmtest)
bptest(mod)
?bptest
# Teste de Breusch-Pagan
# library(lmtest)
bptest(res_3 ~ dados$x1 + dados$x2)
# Teste de Breusch-Pagan
# library(lmtest)
bptest(mod)
# gráfico dos resíduos
plot(res_3, main = "Resíduos studentizados",
ylab = "Resíduos studentizados",
xlab = "Observações")
# Gráfico dos resíduos seguindo a ordem de coleta
plot(res_3 ~ dados$ID)
# Gráfico de alavancagem
plot(mod)
hatvalues(mod)
2*p/n
# valores matriz H
p <- 2
n <- 25
2*p/n
h <- hatvalues(mod)
cbind(h, 2*p/n, h > 2*p/n)
#ou
p <- length(coef(mod))
p
# ou
n <- length(dados$y)
2*p/n  # limite para valores da matriz hat
h <- hatvalues(mod)
cbind(h, 2*p/n, h > 2*p/n)
# Distância de Cook
D <- cooks.distance(mod)
D
cbind(dados, D, 1, D > 1)
cbind(dados, h, 2*p/n, h > 2*p/n)
# DFBETAS
dfbetas(mod)
dfbetas(mod) > 2/sqrt(n)
dfbetas(mod) >= 2/sqrt(n)
n
2/sqrt(n)
round(dfbetas(mod), 2)
abs(dfbetas(mod)) >= 2/sqrt(n)
round(dfbetas(mod), 2)
dffits(mod)
2*sqrt(p/n)
round(dffits(mod), 2)
abs(dffits(mod)) >= 2*sqrt(p/n)
